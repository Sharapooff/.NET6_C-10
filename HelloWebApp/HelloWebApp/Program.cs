var builder = WebApplication.CreateBuilder(args); //builder - объект WebApplicationBuilder
var app = builder.Build();  //app - объект WebApplication

app.MapGet("/", () => "Hello World!");

app.Run();

// WebApplication и WebApplicationBuilder____________________________________________________________________________________________

//Кроме создания объекта WebApplication класс WebApplicationBuilder выполняет еще ряд задач, среди которых можно выделить следующие:
//Установка конфигурации приложения
//Добавление сервисов
//Настройка логгирования в приложении
//Установка окружения приложения
//Конфигурация объектов IHostBuilder и IWebHostBuilder, которые применяются для создания хоста приложения

//Для реализации этих задач в классе WebApplicationBuilder определены следующие свойства:
//  Configuration: представляет объект ConfigurationManager, который применяется для добавления конфигурации к приложению.
//  Environment: предоставляет информацию об окружении, в котором запущено приложение.
//  Host: объект IHostBuilder, который применяется для настройки хоста.
//  Logging: позволяет определить настройки логгирования в приложении.
//  Services: представляет коллекцию сервисов и позволяет добавлять сервисы в приложение.
//  WebHost: объект IWebHostBuilder, который позволяет настроить отдельные настройки сервера.

//Класс WebApplication применяется для управления обработкой запроса, установки маршрутов, получения сервисов и т.д.
//Класс WebApplication применяет три интерфейса:
//    IHost: применяется для запуска и остановки хоста, который прослушивает входящие запросы
//    IApplicationBuilder: применяется для установки компонентов, которые участвуют в обработке запроса
//    IEndpointRouteBuilder: применяется для установки маршрутов, которые сопоставляются с запросами

//Для получения доступа к функциональности приложения можно использовать свойства класса WebApplication:
//    Configuration: представляет конфигурацию приложения в виде объекта IConfiguration
//    Environment: представляет окружение приложения в виде IWebHostEnvironment
//    Lifetime: позволяет получать уведомления о событиях жизненного цикла приложения
//    Logger: представляет логгер приложения по умолчанию
//    Services: представляет сервисы приложения
//    Urls: представляет набор адресов, которые использует сервер

//Для управления хостом класс WebApplication определяет следующие методы:
//    Run(): запускает приложение
//    RunAsync(): асинхронно запускает приложение
//    Start(): запускает приложение
//    StartAsync(): запускает приложение
//    StopAsync(): останавливает приложение
