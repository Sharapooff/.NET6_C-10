using _1_16_Построение_конвейера_обработки_запроса;

var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

//Поскольку компоненту RoutingMiddleware нет смысла обрабатывать запрос, если пользователь не аутентифицирован, то в конвейере 
//компонент AuthenticationMiddleware должен быть помещен перед компонентом RoutingMiddleware
// Если мы обратимся по пути "/index" или "/about" и не передадим параметр token, то мы получим ошибку.
app.UseMiddleware<ErrorHandlingMiddleware>();
app.UseMiddleware<AuthenticationMiddleware>();
app.UseMiddleware<RoutingMiddleware>();

app.Run();




//Обычно для обработки запроса применяется не один, а несколько компонентов middleware. И в этом случае большую роль может играть порядок их помещения
//в конвейер обработки запроса, а также то, как они взаимодействуют с другими компонентами.
//Кроме того, каждый компонент middleware может обрабатывать запрос до и после последующих в конвейере компонентов. Данное обстоятельство позволяет
//предыдущим компонентам корректировать результат обработки последующих компонентов.

// Определим класс RoutingMiddleware для обработки запроса.
// Чтобы пользователь был аутентифицирован при обращении к нашему приложению, добавим новый класс AuthenticationMiddleware.

